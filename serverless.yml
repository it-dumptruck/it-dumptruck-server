service: dumptruck
frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs16.x
  region: ap-northeast-2
  stage: ${opt:stage, 'dev'}
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:service}-*"
        - Effect: Allow
          Action:
            - s3:GetObject
          Resource: "arn:aws:s3:::${self:service}-*/*"
  environment:
    tableName: ${self:service}-${self:provider.stage}
    bucketName: ${self:service}-assets-${self:provider.stage}

functions:
  index:
    handler: src/funcs.index
    events:
      - httpApi:
          path: /
          method: get
  auth:
    handler: src/funcs/auth.index
    events:
      - httpApi:
          path: /auth
          method: get
  getDumpList:
    handler: src/funcs/dumps.getDumpList
    events:
      - httpApi:
          path: /dumps
          method: get
  getQuestion:
    handler: src/funcs/dumps.getQuestion
    events:
      - httpApi:
          path: /dumps/{dump_id}/{question_token}
          method: get
  markQuestion:
    handler: src/funcs/dumps.markQuestion
    events:
      - httpApi:
          path: /marks/{dump_id}/{question_token}
          method: post

resources:
  Resources:
    tableName:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.tableName}
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: sid
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
          - AttributeName: sid
            KeyType: RANGE
        BillingMode: PAY_PER_REQUEST
    PublicBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:provider.environment.bucketName}
    PublicBucketPolicy:
      Type: AWS::S3::BucketPolicy
      Properties:
        Bucket: !Ref PublicBucket
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - 's3:GetObject'
              Resource:
                - !Join ['/', [!GetAtt [PublicBucket, Arn], 'icons/*']]
              Principal: '*'